{
    "swagger": "2.0",
    "info": {
        "description": "Auth service API documentation",
        "title": "api gat way",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/account/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new account for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Create Account",
                "parameters": [
                    {
                        "description": "Create account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account created successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateAccountRes"
                        }
                    },
                    "500": {
                        "description": "Error while creating account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/delete/{account_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing account by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Delete Account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.DeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: account_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/get/{account_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve an account's details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get Account by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account Id",
                        "name": "account_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "schema": {
                            "$ref": "#/definitions/genproto.AccountResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: account_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all accounts for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "List Accounts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID to filter by",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account name to filter by",
                        "name": "account_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account type to filter by",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Account balance to filter by",
                        "name": "balance",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Account currency to filter by",
                        "name": "currency",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of accounts",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListAccountsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while listing accounts",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/account/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Update Account",
                "parameters": [
                    {
                        "description": "Update account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateAccountRes"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing account_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating account",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new budget for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Create Budget",
                "parameters": [
                    {
                        "description": "Create budget request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateBudgetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget created successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.MessageResponsee"
                        }
                    },
                    "500": {
                        "description": "Error while creating budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/delete/{budget_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing budget by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Delete Budget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: budget_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/get/{budget_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a budget's details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Get Budget by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Budget ID",
                        "name": "budget_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget details",
                        "schema": {
                            "$ref": "#/definitions/genproto.BudgetResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: budget_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all budgets for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "List Budgets",
                "responses": {
                    "200": {
                        "description": "List of budgets",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListBudgetsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while listing budgets",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/budget/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing budget",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Budget"
                ],
                "summary": "Update Budget",
                "parameters": [
                    {
                        "description": "Update budget request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateBudgetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Budget updated successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.MessageResponsee"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing budget_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating budget",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new category for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Create Category",
                "parameters": [
                    {
                        "description": "Create category request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.MessageResponse"
                        }
                    },
                    "500": {
                        "description": "Error while creating category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/delete/{category_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing category by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Delete Category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.CategoryDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: category_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/get/{category_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a category's details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Get Category by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details",
                        "schema": {
                            "$ref": "#/definitions/genproto.CategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: category_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all categories for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "List Categories",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListResponse"
                        }
                    },
                    "500": {
                        "description": "Error while listing categories",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category"
                ],
                "summary": "Update Category",
                "parameters": [
                    {
                        "description": "Update category request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing category_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating category",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new financial goal for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Create Goal",
                "parameters": [
                    {
                        "description": "Create goal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal created successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.Responsee"
                        }
                    },
                    "500": {
                        "description": "Error while creating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/delete/{goal_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing goal by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Delete Goal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "goal_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: goal_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/get/{goal_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a goal's details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Get Goal by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Goal ID",
                        "name": "goal_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal details",
                        "schema": {
                            "$ref": "#/definitions/genproto.GoalResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: goal_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List all financial goals for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "List Goals",
                "responses": {
                    "200": {
                        "description": "List of goals",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListGoalsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while listing goals",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/goal/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing goal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Goal"
                ],
                "summary": "Update Goal",
                "parameters": [
                    {
                        "description": "Update goal request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateGoalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goal updated successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.Responsee"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing goal_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating goal",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/get/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a notification by user_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "Get Notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.GetNotificationByidResponse"
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while retrieving notification",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notification/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a list of all notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "List Notifications",
                "responses": {
                    "200": {
                        "description": "List of notifications retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.ListNotificationResponse"
                        }
                    },
                    "500": {
                        "description": "Error while retrieving notifications\" // Use Responsee for general errors",
                        "schema": {
                            "$ref": "#/definitions/genproto.Responsee"
                        }
                    }
                }
            }
        },
        "/transaction/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Create Transaction",
                "parameters": [
                    {
                        "description": "Create transaction request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.CreateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction created successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.Response"
                        }
                    },
                    "500": {
                        "description": "Error while creating transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/delete/{transaction_id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete an existing transaction by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Delete Transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.TransactionDeleteResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: transaction_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while deleting transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/get/{transaction_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific transaction's details by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transaction by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction details",
                        "schema": {
                            "$ref": "#/definitions/genproto.TransactionResponse"
                        }
                    },
                    "400": {
                        "description": "Missing required query parameter: transaction_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while fetching transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get transactions based on filter criteria",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get Transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account ID to filter by",
                        "name": "account_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category ID to filter by",
                        "name": "category_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Transaction type to filter by",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Description to filter by",
                        "name": "description",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Date to filter by (YYYY-MM-DD)",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.TransactionsResponse"
                        }
                    },
                    "500": {
                        "description": "Error while retrieving transactions",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/transaction/update": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update the details of an existing transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Update Transaction",
                "parameters": [
                    {
                        "description": "Update transaction request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/genproto.UpdateTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "schema": {
                            "$ref": "#/definitions/genproto.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid request or missing transaction_id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error while updating transaction",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "genproto.AccountResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "account_name": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.BudgetDeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genproto.BudgetResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "budget_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CategoryDeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genproto.CategoryResponse": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateAccountRequest": {
            "type": "object",
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateAccountRes": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateBudgetRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateCategoryRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateGoalRequest": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "deadline": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_amount": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.CreateTransactionRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.DeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genproto.GetNotificationByidResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.GoalDeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genproto.GoalResponse": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "deadline": {
                    "type": "string"
                },
                "goal_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_amount": {
                    "type": "number"
                }
            }
        },
        "genproto.ListAccountsResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.AccountResponse"
                    }
                }
            }
        },
        "genproto.ListBudgetsResponse": {
            "type": "object",
            "properties": {
                "budgets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.BudgetResponse"
                    }
                }
            }
        },
        "genproto.ListGoalsResponse": {
            "type": "object",
            "properties": {
                "goals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.GoalResponse"
                    }
                }
            }
        },
        "genproto.ListNotificationResponse": {
            "type": "object",
            "properties": {
                "notifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.GetNotificationByidResponse"
                    }
                }
            }
        },
        "genproto.ListResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.CategoryResponse"
                    }
                }
            }
        },
        "genproto.MessageResponse": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                }
            }
        },
        "genproto.MessageResponsee": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                }
            }
        },
        "genproto.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "genproto.Responsee": {
            "type": "object",
            "properties": {
                "Message": {
                    "type": "string"
                }
            }
        },
        "genproto.TransactionDeleteResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "genproto.TransactionResponse": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.TransactionsResponse": {
            "type": "object",
            "properties": {
                "transactions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/genproto.TransactionResponse"
                    }
                }
            }
        },
        "genproto.UpdateAccountRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "account_name": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateBudgetRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "budget_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "period": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateCategoryRequest": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "genproto.UpdateGoalRequest": {
            "type": "object",
            "properties": {
                "current_amount": {
                    "type": "number"
                },
                "deadline": {
                    "type": "string"
                },
                "goal_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "target_amount": {
                    "type": "number"
                }
            }
        },
        "genproto.UpdateTransactionRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "string"
                },
                "amount": {
                    "type": "number"
                },
                "category_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "transaction_id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}